"""initial DB.

Revision ID: be85fbbda3b7
Revises:
Create Date: 2023-09-17 13:28:59.666104

"""
from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op


# revision identifiers, used by Alembic.
revision: str = "be85fbbda3b7"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Alembic command to upgrade the DB."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "packages",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("last_updated", sa.DateTime(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_packages")),
    )
    with op.batch_alter_table("packages", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_packages_id"), ["id"], unique=False)
        batch_op.create_index(batch_op.f("ix_packages_name"), ["name"], unique=True)

    op.create_table(
        "releases",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("version", sa.String(), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=True),
        sa.Column("is_yanked", sa.Boolean(), nullable=True),
        sa.Column("package_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["package_id"], ["packages.id"], name=op.f("fk_releases_package_id_packages"), ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_releases")),
    )
    with op.batch_alter_table("releases", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_releases_id"), ["id"], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Alembic command to downgrade the DB."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("releases", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_releases_id"))

    op.drop_table("releases")
    with op.batch_alter_table("packages", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_packages_name"))
        batch_op.drop_index(batch_op.f("ix_packages_id"))

    op.drop_table("packages")
    # ### end Alembic commands ###
